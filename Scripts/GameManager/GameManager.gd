extends Node

# ðŸ“Œ DÃ©finition des Ã©tats du jeu
enum GameState { EN_COURS, GAME_OVER, VICTOIRE }

# ðŸ“Œ Signal pour informer dâ€™un changement dâ€™Ã©tat
signal game_state_changed(state)
signal timer_updated(time_left)

# ðŸ“Œ Variables principales
var state : GameState = GameState.EN_COURS
@export var timer : float = 60.0  # DurÃ©e de la partie en secondes

func _ready():
	start_game()

# ðŸ“Œ DÃ©marrer une partie
func start_game():
	state = GameState.EN_COURS
	timer = 60.0  # On remet le timer Ã  60s
	emit_signal("game_state_changed", state)

# ðŸ“Œ Mettre Ã  jour le jeu Ã  chaque frame
func _process(delta):
	if state == GameState.EN_COURS:
		timer -= delta
		emit_signal("timer_updated", timer)

		if timer <= 0:
			win_game()

# ðŸ“Œ Quand le joueur meurt
func game_over():
	if state != GameState.EN_COURS:
		return  # Ã‰vite de relancer un Game Over si c'est dÃ©jÃ  fait

	state = GameState.GAME_OVER
	emit_signal("game_state_changed", state)

# ðŸ“Œ Si le joueur survit jusquâ€™Ã  la fin
func win_game():
	state = GameState.VICTOIRE
	emit_signal("game_state_changed", state)
